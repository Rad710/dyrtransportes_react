# Steps (desde root del proyecto)
# 1. Agregar token para Sonarqube
# 2. docker build -t node-agent:latest -f jenkins/Dockerfile.agent .
# 4. docker tag node-agent:latest localhost:5000/dev/node-agent:23.5.0
# 5. docker push localhost:5000/dev/node-agent:23.5.0

FROM node:23.5.0 AS builder

#Jenkins user (node user already exists)
# RUN groupadd --gid 1000 jenkins \
#     && useradd --uid 1000 --gid jenkins --shell /bin/bash --create-home jenkins

COPY . /app
WORKDIR /app

RUN chmod -R 777 . \
    && chown -R 1000:1000 .

#Cache npm install
USER node

# RUN npm cache clean --force \
#     && npm install && npm audit fix

RUN npm cache clean --force \
    && npm install --no-audit


FROM node:23.5.0
# Add Docker's official GPG key:
RUN apt-get -y update \
    && apt-get -y install ca-certificates curl gnupg \
    && apt-get clean -y

RUN install -m 0755 -d /etc/apt/keyrings
RUN curl -fsSL https://download.docker.com/linux/debian/gpg | gpg --dearmor -o /etc/apt/keyrings/docker.gpg
RUN chmod a+r /etc/apt/keyrings/docker.gpg

# Add the repository to Apt sources:
RUN echo \
    "deb [arch=$(dpkg --print-architecture) signed-by=/etc/apt/keyrings/docker.gpg] https://download.docker.com/linux/debian \
    $(. /etc/os-release && echo "$VERSION_CODENAME") stable" | \
    tee /etc/apt/sources.list.d/docker.list > /dev/null

#Install Docker CLI
RUN apt-get -y update && apt-get -y install docker-ce-cli \
    inetutils-ping wget zip jq curl \
    && apt-get clean -y

WORKDIR /home/node
COPY --from=builder /app/node_modules node_modules

RUN chmod -R 777 /home/node \
    && chown -R 1000:1000 /home/node


ENV SONAR_USER_HOME="/home/node/.sonar"
# sonarqube scanner
RUN npm install -g sonarqube-scanner eslint
USER node
RUN sonar-scanner --version

WORKDIR /app